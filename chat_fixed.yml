# Fechatter Server Configuration - Docker Environment
# Production-ready configuration with enhanced features

# Server configuration
server:
  port: 6688
  db_url: "postgres://fechatter:fechatter_password@postgres:5432/fechatter"
  base_dir: "/tmp/fechatter/"
  max_upload_size: 10485760 # 10MB
  request_timeout_ms: 30000

  # Analytics configuration
  analytics:
    enabled: true
    endpoint: "http://analytics-server:6690" # analytics-server endpoint
    batch_size: 100
    flush_interval_seconds: 30
    timeout_seconds: 10
    use_grpc: false # Use NATS instead of gRPC for analytics

  # CORS configuration
  cors:
    enabled: true
    allow_origins:
    - "http://localhost:1420"
    - "http://127.0.0.1:1420"
    - "http://localhost:3000"
    - "http://localhost:5173"
    - "http://localhost:5174"
    - "http://127.0.0.1:5173"
    - "http://127.0.0.1:5174"
    allow_methods: [ "GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS" ]
    allow_headers: [ "Content-Type", "Authorization", "X-Requested-With", "Accept", "Origin" ]
    allow_credentials: true
    max_age: 3600

# JWT Authentication
auth:
  # Use HMAC-SHA256 instead of Ed25519 for better compatibility
  algorithm: HS256
  secret: "7acfafe8638120305db6e451055bb262fb95ae64c15bd262e230c3c0a80a8f7a"
  token_expiration: 1800 # 30 minutes
  refresh_token_expiration: 604800 # 7 days

# Features configuration
features:
  # Cache configuration
  cache:
    enabled: true
    redis_url: "redis://:fechatter_redis_pass@redis:6379"
    key_prefix: "fechatter"
    default_ttl: 3600
    pool_size: 10
    connection_timeout_ms: 5000

  # Search configuration  
  search:
    enabled: true
    provider: "meilisearch"
    meilisearch_url: "http://meilisearch:7700"
    meilisearch_api_key: "fechatter_search_key"
    async_indexing: true
    batch_size: 100
    indexer:
      batch_size: 50
      batch_timeout_ms: 2000

  # Messaging configuration
  messaging:
    enabled: true
    provider: "nats"
    nats_url: "nats://nats:4222"
    jetstream_enabled: true

  # Message service configuration
  message_service:
    max_concurrent_sends_per_chat: 10
    send_timeout_seconds: 30
    cache_timeout_ms: 2000
    event_publish_timeout_seconds: 5
    stream_publish_timeout_seconds: 10
    enable_detailed_tracing: true
    max_retry_attempts: 3
    retry_backoff_base_ms: 1000

  # Notification configuration
  notifications:
    in_app_enabled: true
    realtime_enabled: true
    max_per_user: 100
    retention_days: 30
    email_enabled: false
    smtp_host: "smtp.gmail.com"
    smtp_port: 587
    smtp_username: ""
    smtp_password: ""
    from_email: "noreply@fechatter.com"
    from_name: "Fechatter"
    use_tls: true

  # Observability configuration
  observability:
    log_level: "info"
    log_format: "json"
    log_to_file: false
    log_file_path: "/app/logs/fechatter.log"
    metrics_enabled: true
    metrics_bind_address: "0.0.0.0:9090"
    tracing_enabled: true
    service_name: "fechatter-server"
    service_version: "1.0.0"
    environment: "docker"

  # Rate limiting configuration
  rate_limiting:
    enabled: true
    window_seconds: 60
    max_requests: 100
    sliding_window: true
    strategy: "UserBased"

# Legacy configuration (for backward compatibility)
messaging:
  enabled: true
  provider: "nats"
  nats:
    url: "nats://nats:4222"
    auth:
      enabled: false
    subjects:
      message_created: "fechatter.messages.created"
      message_updated: "fechatter.messages.updated"
      message_deleted: "fechatter.messages.deleted"
      chat_created: "fechatter.chats.created"
      chat_updated: "fechatter.chats.updated"
      chat_deleted: "fechatter.chats.deleted"
      user_joined_chat: "fechatter.chats.member.joined"
      user_left_chat: "fechatter.chats.member.left"
      duplicate_message_attempted: "fechatter.messages.duplicate"
      search_index_message: "fechatter.search.index.message"
      search_index_delete: "fechatter.search.index.delete"
      realtime_message: "fechatter.realtime.chat.>"
      realtime_read: "fechatter.realtime.chat.*.read"
      realtime_unread: "fechatter.realtime.chat.*.unread"
      realtime_typing: "fechatter.realtime.chat.*.typing"
      realtime_presence: "fechatter.realtime.user.*.presence"
    jetstream:
      enabled: true
      stream: "fechatter_events"
      storage: "file"
      max_bytes: 1073741824 # 1GB
      max_msg_size: 1048576 # 1MB
      max_age: 24 # 1 day retention
      search_stream:
        enabled: true
        name: "fechatter_search_index"
        subjects: [ "fechatter.search.index.*" ]
        storage: "file"
        max_bytes: 104857600 # 100MB
        max_age: 24 # 1 day retention
        consumer:
          name: "search_indexer"
          ack_policy: "explicit"
          max_deliver: 3
          ack_wait: "30s"
          max_batch: 50

search:
  enabled: true
  provider: "meilisearch"
  async_indexing:
    enabled: true
    batch_size: 10
    batch_timeout_ms: 1000
  meilisearch:
    url: "http://meilisearch:7700"
    api_key: "fechatter_search_key"
    connection_timeout_ms: 2000
    request_timeout_ms: 3000
    indexes:
      messages:
        name: "fechatter_messages"
        primary_key: "id"
        searchable_fields: [ "content", "sender_name" ]
        displayed_fields: [ "id", "chat_id", "sender_id", "content", "created_at", "sender_name", "files", "relevance_score" ]
        filterable_fields: [ "chat_id", "workspace_id" ]
        sortable_fields: [ "created_at" ]
    settings:
      pagination_limit: 20

# Notification system configuration - Focus on in-app notifications
notification:
  # Primary notification system (in-app notifications)
  in_app:
    enabled: true # Enable in-app notifications
    realtime_enabled: true # Enable real-time WebSocket notifications
    max_notifications_per_user: 100 # Max notifications to keep per user
    retention_days: 30 # Days to keep read notifications

  # Notification delivery configuration
  delivery:
    max_retries: 3 # Maximum retry attempts for failed notifications
    retry_delay_seconds: 5 # Delay between retry attempts
    batch_size: 10 # Number of notifications to process in a batch
