    Blocking waiting for file lock on build directory
warning: unused import: `MessageId`
 --> fechatter_core/src/contracts/events.rs:3:30
  |
3 | use crate::{ChatId, Message, MessageId, UserId};
  |                              ^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `TokenManager`, `UserClaims`, `UserId`, `WorkspaceId`, and `error::CoreError`
  --> fechatter_core/src/middlewares/bearer_auth.rs:16:3
   |
16 |   error::CoreError,
   |   ^^^^^^^^^^^^^^^^
17 |   models::{
18 |     jwt::{TokenConfigProvider, TokenManager, UserClaims},
   |                                ^^^^^^^^^^^^  ^^^^^^^^^^
19 |     AuthUser, UserId, WorkspaceId,
   |               ^^^^^^  ^^^^^^^^^^^

warning: unused imports: `AuthTokens`, `contracts::services::AuthContext`, and `error::CoreError`
  --> fechatter_core/src/middlewares/custom_builder.rs:21:3
   |
21 |   contracts::services::AuthContext,
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
22 |   error::CoreError,
   |   ^^^^^^^^^^^^^^^^
23 |   models::jwt::{AuthTokens, UserClaims},
   |                 ^^^^^^^^^^

warning: unused import: `error::CoreError`
 --> fechatter_core/src/middlewares/mw_traits.rs:3:13
  |
3 | use crate::{error::CoreError, models::jwt::UserClaims, models::AuthUser};
  |             ^^^^^^^^^^^^^^^^

warning: unused import: `tracing::warn`
 --> fechatter_core/src/middlewares/request_id.rs:3:5
  |
3 | use tracing::warn;
  |     ^^^^^^^^^^^^^

warning: unused imports: `Any` and `CorsLayer`
  --> fechatter_core/src/middlewares/mod.rs:14:10
   |
14 |   cors::{Any, CorsLayer},
   |          ^^^  ^^^^^^^^^

warning: unused import: `NaiveDateTime`
  --> fechatter_core/src/models/mod.rs:22:24
   |
22 | use chrono::{DateTime, NaiveDateTime, Utc};
   |                        ^^^^^^^^^^^^^

warning: unused import: `contracts::AuthService`
 --> fechatter_core/src/services/mock.rs:3:3
  |
3 |   contracts::AuthService,
  |   ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `RefreshTokenData` and `TokenManager`
 --> fechatter_core/src/utils/mock.rs:4:29
  |
4 |   models::jwt::{AuthTokens, RefreshTokenData, TokenManager, UserClaims},
  |                             ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^

warning: variable does not need to be mutable
  --> fechatter_core/src/middlewares/query_token_auth.rs:29:8
   |
29 |   let (mut parts, body) = req.into_parts();
   |        ----^^^^^
   |        |
   |        help: remove this `mut`
   |
   = note: `#[warn(unused_mut)]` on by default

warning: unused import: `TokenConfigProvider`
  --> fechatter_core/src/middlewares/bearer_auth.rs:18:11
   |
18 |     jwt::{TokenConfigProvider, TokenManager, UserClaims},
   |           ^^^^^^^^^^^^^^^^^^^

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> fechatter_core/src/services/workspace_service.rs:26:3
   |
26 |   async fn switch_user_workspace(
   |   ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
   = note: `#[warn(async_fn_in_trait)]` on by default
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
26 ~   fn switch_user_workspace(
27 |     &self,
28 |     user_id: UserId,
29 |     workspace_id: WorkspaceId,
30 ~   ) -> impl std::future::Future<Output = Result<SwitchWorkspaceResponse, CoreError>> + Send;
   |

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> fechatter_core/src/services/workspace_service.rs:33:3
   |
33 |   async fn list_all_workspaces(&self) -> Result<Vec<Workspace>, CoreError>;
   |   ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
33 -   async fn list_all_workspaces(&self) -> Result<Vec<Workspace>, CoreError>;
33 +   fn list_all_workspaces(&self) -> impl std::future::Future<Output = Result<Vec<Workspace>, CoreError>> + Send;
   |

warning: use of `async fn` in public traits is discouraged as auto trait bounds cannot be specified
  --> fechatter_core/src/services/workspace_service.rs:36:3
   |
36 |   async fn check_workspace_access(
   |   ^^^^^
   |
   = note: you can suppress this lint if you plan to use the trait only in your own code, or do not care about auto traits like `Send` on the `Future`
help: you can alternatively desugar to a normal `fn` that returns `impl Future` and add any desired bounds such as `Send`, but these cannot be relaxed without a breaking API change
   |
36 ~   fn check_workspace_access(
37 |     &self,
38 |     user_id: UserId,
39 |     workspace_id: WorkspaceId,
40 ~   ) -> impl std::future::Future<Output = Result<bool, CoreError>> + Send;
   |

warning: `fechatter_core` (lib) generated 14 warnings (run `cargo fix --lib -p fechatter_core` to apply 10 suggestions)
warning: value assigned to `failed` is never read
   --> analytics_server/src/handlers.rs:301:9
    |
301 |         failed += rows.len();
    |         ^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: value assigned to `failed` is never read
   --> analytics_server/src/handlers.rs:310:9
    |
310 |         failed += rows.len();
    |         ^^^^^^
    |
    = help: maybe it is overwritten before being read?

warning: `analytics_server` (lib) generated 2 warnings
warning: ambiguous glob re-exports
  --> fechatter_server/src/handlers/mod.rs:18:9
   |
18 | pub use chat::*;
   |         ^^^^^^^ the name `add_chat_members_handler` in the value namespace is first re-exported here
19 | pub use chat_members::*;
   |         --------------- but the name `add_chat_members_handler` in the value namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: unused imports: `FromRequestParts` and `request::Parts`
  --> fechatter_server/src/middlewares/auth_core.rs:18:13
   |
18 |   extract::{FromRequestParts, State},
   |             ^^^^^^^^^^^^^^^^
19 |   http::{Request, StatusCode, request::Parts},
   |                               ^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `warn`
  --> fechatter_server/src/services/infrastructure/event/analytics_publisher.rs:12:35
   |
12 | use tracing::{debug, error, info, warn};
   |                                   ^^^^

warning: unused import: `StorageService`
 --> fechatter_server/src/services/infrastructure/third_party_manager.rs:7:60
  |
7 |     infrastructure::storage::{/*MinIOStorage, S3Storage,*/ StorageService},
  |                                                            ^^^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `integration_tests`
  --> fechatter_server/src/tests/mod.rs:35:7
   |
35 | #[cfg(feature = "integration_tests")]
   |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `test-util`
   = help: consider adding `integration_tests` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: ambiguous glob re-exports
  --> fechatter_server/src/lib.rs:51:9
   |
51 | pub use handlers::*;
   |         ^^^^^^^^^^^ the name `auth` in the type namespace is first re-exported here
...
57 | pub use domains::*;
   |         ---------- but the name `auth` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> fechatter_server/src/lib.rs:51:9
   |
51 | pub use handlers::*;
   |         ^^^^^^^^^^^ the name `chat` in the type namespace is first re-exported here
...
57 | pub use domains::*;
   |         ---------- but the name `chat` in the type namespace is also re-exported here

warning: unused variable: `headers`
  --> fechatter_server/src/handlers/debug_auth.rs:18:3
   |
18 |   headers: HeaderMap,
   |   ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_headers`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `user`
   --> fechatter_server/src/handlers/auth.rs:388:38
    |
388 |   let tokens = if let Some(Extension(user)) = auth_user {
    |                                      ^^^^ help: if this is intentional, prefix it with an underscore: `_user`

warning: unused variable: `user`
  --> fechatter_server/src/handlers/workspaces.rs:67:13
   |
67 |   Extension(user): Extension<AuthUser>,
   |             ^^^^ help: if this is intentional, prefix it with an underscore: `_user`

warning: unused variable: `state`
   --> fechatter_server/src/handlers/realtime.rs:199:9
    |
199 |   State(state): State<AppState>,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `auth`
   --> fechatter_server/src/handlers/realtime.rs:200:13
    |
200 |   Extension(auth): Extension<AuthUser>,
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_auth`

warning: unused variable: `workspace_id`
   --> fechatter_server/src/handlers/workspaces.rs:172:7
    |
172 |   let workspace_id = i64::from(user.workspace_id);
    |       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_workspace_id`

warning: unused variable: `workspace`
   --> fechatter_server/src/services/application/workers/workspace/service.rs:146:9
    |
146 |     let workspace = self
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_workspace`

warning: unused variable: `update_chat`
  --> fechatter_server/src/handlers/chat.rs:73:8
   |
73 |   Json(update_chat): Json<UpdateChat>,
   |        ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_update_chat`

warning: unused variable: `cache_service`
   --> fechatter_server/src/handlers/cache_stats.rs:141:7
    |
141 |   let cache_service = state
    |       ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cache_service`

warning: unused variable: `params`
   --> fechatter_server/src/handlers/login_monitor.rs:178:9
    |
178 |   Query(params): Query<MonitorQueryParams>,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_params`

warning: unused variable: `result`
   --> fechatter_server/src/domains/chat/repository.rs:391:9
    |
391 |     let result = sqlx::query("DELETE FROM chats WHERE id = $1 AND created_by = $2")
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unused variable: `state`
   --> fechatter_server/src/handlers/production_health.rs:209:9
    |
209 |   State(state): State<AppState>,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `state`
   --> fechatter_server/src/handlers/production_health.rs:302:9
    |
302 |   State(state): State<AppState>,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user`
   --> fechatter_server/src/handlers/workspaces.rs:229:13
    |
229 |   Extension(user): Extension<AuthUser>,
    |             ^^^^ help: if this is intentional, prefix it with an underscore: `_user`

warning: unused variable: `state`
   --> fechatter_server/src/middlewares/audit_logging.rs:385:3
    |
385 |   state: &AppState,
    |   ^^^^^ help: if this is intentional, prefix it with an underscore: `_state`

warning: unused variable: `user_id`
   --> fechatter_server/src/services/application/workers/message/service.rs:953:5
    |
953 |     user_id: UserId,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `event_publisher`
   --> fechatter_server/src/services/application/workers/message/service.rs:995:9
    |
995 |     let event_publisher = Arc::new(AppStateEventPublisher::new(
    |         ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_event_publisher`

warning: unused variable: `workspace_id`
   --> fechatter_server/src/services/infrastructure/cache/mod.rs:359:58
    |
359 |   pub async fn warmup_on_user_login(&self, user_id: i64, workspace_id: i64) {
    |                                                          ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_workspace_id`

warning: unused variable: `chat_id`
   --> fechatter_server/src/services/infrastructure/flows/realtime_stream.rs:217:5
    |
217 |     chat_id: i64,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chat_id`

warning: unused variable: `user_id`
   --> fechatter_server/src/services/infrastructure/flows/realtime_stream.rs:226:5
    |
226 |     user_id: i64,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `primary_key`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:482:9
    |
482 |     let primary_key = "id"; // 使用固定的主键
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_primary_key`

warning: unused variable: `filterable_attributes`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:497:9
    |
497 |     let filterable_attributes = vec!["sender_id", "chat_id", "timestamp"];
    |         ^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_filterable_attributes`

warning: unused variable: `sortable_attributes`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:498:9
    |
498 |     let sortable_attributes = vec!["timestamp"];
    |         ^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sortable_attributes`

warning: unused variable: `period_hours`
  --> fechatter_server/src/services/ai/agents/summary_agent.rs:50:5
   |
50 |     period_hours: i64,
   |     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_period_hours`

warning: unused variable: `chat_id`
   --> fechatter_server/src/services/ai/agents/summary_agent.rs:120:5
    |
120 |     chat_id: i64,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chat_id`

warning: unused variable: `daily`
   --> fechatter_server/src/services/ai/rag_indexer.rs:222:5
    |
222 |     daily: &[ChatPeriodSummary],
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_daily`

warning: unused variable: `doc_id`
   --> fechatter_server/src/services/ai/rag_indexer.rs:226:11
    |
226 |       let doc_id = format!(
    |           ^^^^^^ help: if this is intentional, prefix it with an underscore: `_doc_id`

warning: use of deprecated associated function `handlebars::RenderError::new`: Use RenderErrorReason instead
   --> fechatter_server/src/services/infrastructure/notification/email_templates.rs:242:41
    |
242 |             .ok_or_else(|| RenderError::new("truncate helper requires text parameter"))?
    |                                         ^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: unused import: `sqlx::Row`
  --> fechatter_server/src/domains/chat/chat_domain.rs:13:5
   |
13 | use sqlx::Row;
   |     ^^^^^^^^^

warning: unused import: `Validate`
 --> fechatter_server/src/dtos/core/validation.rs:9:17
  |
9 | use validator::{Validate, ValidationError, ValidationErrors};
  |                 ^^^^^^^^

warning: unused import: `SearchApplicationServiceTrait`
  --> fechatter_server/src/handlers/search.rs:23:66
   |
23 |   services::application::workers::search::{MessageSearchResults, SearchApplicationServiceTrait},
   |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `sha2::Digest`
  --> fechatter_server/src/middlewares/caching.rs:24:5
   |
24 | use sha2::Digest;
   |     ^^^^^^^^^^^^

warning: unused import: `RefreshTokenRepository`
  --> fechatter_server/src/services/application/workers/auth/service.rs:35:5
   |
35 |     RefreshTokenRepository, RefreshTokenService, SigninService, SignupService, TokenManager,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `tokio_stream::StreamExt`
  --> fechatter_server/src/services/infrastructure/vector_db/pinecone.rs:10:5
   |
10 | use tokio_stream::StreamExt as TokioStreamExt;
   |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `futures::StreamExt`
 --> fechatter_server/src/services/infrastructure/vector_db/pinecone.rs:3:5
  |
3 | use futures::StreamExt;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `JsonRender`
 --> fechatter_server/src/services/infrastructure/notification/email_templates.rs:5:44
  |
5 | use handlebars::{Handlebars, HelperResult, JsonRender, Output, RenderContext, RenderError};
  |                                            ^^^^^^^^^^

warning: unused variable: `user_id`
   --> fechatter_server/src/domains/messaging/messaging_domain.rs:146:5
    |
146 |     user_id: i64,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `notification`
  --> fechatter_server/src/domains/notification/repository.rs:60:37
   |
60 |   async fn save_notification(&self, notification: &Notification) -> Result<i64, CoreError> {
   |                                     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_notification`

warning: unused variable: `notification_id`
  --> fechatter_server/src/domains/notification/repository.rs:68:5
   |
68 |     notification_id: i64,
   |     ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_notification_id`

warning: unused variable: `user_id`
  --> fechatter_server/src/domains/notification/repository.rs:69:5
   |
69 |     user_id: i64,
   |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `notification`
  --> fechatter_server/src/domains/notification/repository.rs:75:39
   |
75 |   async fn update_notification(&self, notification: &Notification) -> Result<(), CoreError> {
   |                                       ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_notification`

warning: unused variable: `user_id`
  --> fechatter_server/src/domains/notification/repository.rs:82:5
   |
82 |     user_id: i64,
   |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `limit`
  --> fechatter_server/src/domains/notification/repository.rs:83:5
   |
83 |     limit: i32,
   |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_limit`

warning: unused variable: `user_id`
  --> fechatter_server/src/domains/notification/repository.rs:89:42
   |
89 |   async fn get_user_notifications(&self, user_id: i64) -> Result<Vec<Notification>, CoreError> {
   |                                          ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `notification_id`
  --> fechatter_server/src/domains/notification/repository.rs:94:39
   |
94 |   async fn delete_notification(&self, notification_id: i64, user_id: i64) -> Result<(), CoreError> {
   |                                       ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_notification_id`

warning: unused variable: `user_id`
  --> fechatter_server/src/domains/notification/repository.rs:94:61
   |
94 |   async fn delete_notification(&self, notification_id: i64, user_id: i64) -> Result<(), CoreError> {
   |                                                             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `user_id`
  --> fechatter_server/src/domains/notification/repository.rs:99:36
   |
99 |   async fn get_unread_count(&self, user_id: i64) -> Result<i64, CoreError> {
   |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `user_id`
   --> fechatter_server/src/domains/notification/repository.rs:104:36
    |
104 |   async fn mark_all_as_read(&self, user_id: i64) -> Result<(), CoreError> {
    |                                    ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `to`
   --> fechatter_server/src/dtos/core/conversion.rs:101:26
    |
101 |   fn convert_back(&self, to: &To, context: &ConversionContext) -> Result<From, ConversionError> {
    |                          ^^ help: if this is intentional, prefix it with an underscore: `_to`

warning: unused variable: `context`
   --> fechatter_server/src/dtos/core/conversion.rs:101:35
    |
101 |   fn convert_back(&self, to: &To, context: &ConversionContext) -> Result<From, ConversionError> {
    |                                   ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `filters`
  --> fechatter_server/src/dtos/core/mod.rs:66:31
   |
66 |   fn apply_filters(&mut self, filters: &ResponseFilters) -> Result<(), ConversionError> {
   |                               ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_filters`

warning: unused variable: `context`
   --> fechatter_server/src/dtos/mod.rs:111:5
    |
111 |     context: &ValidationContext,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `context`
   --> fechatter_server/src/dtos/mod.rs:128:5
    |
128 |     context: &ConversionContext,
    |     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_context`

warning: unused variable: `pool`
   --> fechatter_server/src/services/application/workers/message/service.rs:425:5
    |
425 |     pool: Arc<sqlx::PgPool>,
    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_pool`

warning: unused variable: `token_manager`
   --> fechatter_server/src/services/application/workers/message/service.rs:426:5
    |
426 |     token_manager: Arc<fechatter_core::models::jwt::TokenManager>,
    |     ^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_token_manager`

warning: unused variable: `user_id`
   --> fechatter_server/src/services/application/workers/search/query_processor.rs:535:9
    |
535 |     let user_id = context.map(|c| c.user_id);
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_user_id`

warning: unused variable: `search_cache`
   --> fechatter_server/src/services/application/workers/search/query_processor.rs:536:21
    |
536 |     if let Some(ref search_cache) = self.search_cache {
    |                     ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_search_cache`

warning: unused variable: `limit`
   --> fechatter_server/src/services/application/workers/search/service.rs:499:5
    |
499 |     limit: u32,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_limit`

warning: unused variable: `chat_id`
   --> fechatter_server/src/services/infrastructure/event/analytics_publisher.rs:279:57
    |
279 |     async fn track_chat_created(&self, user_id: String, chat_id: String, chat_type: String, members_count: i32) -> Result<(), AppError> {
    |                                                         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_chat_id`

warning: unused variable: `id`
   --> fechatter_server/src/services/infrastructure/search/meilisearch.rs:275:48
    |
275 |   async fn update_document(&self, index: &str, id: &str, doc: Document) -> Result<(), CoreError> {
    |                                                ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `index`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:700:5
    |
700 |     index: &str,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: unused variable: `index`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:716:5
    |
716 |     index: &str,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: unused variable: `index`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:776:5
    |
776 |     index: &str,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: unused variable: `index`
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:790:5
    |
790 |     index: &str,
    |     ^^^^^ help: if this is intentional, prefix it with an underscore: `_index`

warning: field `sync_cache_adapter` is never read
  --> fechatter_server/src/lib.rs:81:14
   |
72 | pub struct AppStateInner {
   |            ------------- field in this struct
...
81 |   pub(crate) sync_cache_adapter: crate::services::infrastructure::cache::SyncCacheAdapter,
   |              ^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `generate_refresh_token` is never used
   --> fechatter_server/src/domains/auth/auth_domain.rs:248:4
    |
248 | fn generate_refresh_token() -> String {
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: method `check_chat_permissions` is never used
   --> fechatter_server/src/domains/chat/chat_domain.rs:132:12
    |
80  | impl ChatDomainServiceImpl {
    | -------------------------- method in this implementation
...
132 |   async fn check_chat_permissions(&self, chat_id: i64, user_id: i64) -> Result<(), CoreError> {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: method `get_chat_type_impl` is never used
   --> fechatter_server/src/domains/chat/chat_member_repository.rs:256:12
    |
15  | impl ChatMemberRepository {
    | ------------------------- method in this implementation
...
256 |   async fn get_chat_type_impl(&self, chat_id: ChatId) -> Result<ChatType, CoreError> {
    |            ^^^^^^^^^^^^^^^^^^

warning: field `pool` is never read
  --> fechatter_server/src/domains/notification/repository.rs:49:3
   |
48 | pub struct PostgresNotificationRepository {
   |            ------------------------------ field in this struct
49 |   pool: Arc<PgPool>,
   |   ^^^^

warning: field `converter_registry` is never read
  --> fechatter_server/src/dtos/mod.rs:37:3
   |
35 | pub struct DtoManager {
   |            ---------- field in this struct
36 |   validator_registry: Arc<ValidatorRegistry>,
37 |   converter_registry: Arc<ConverterRegistry>,
   |   ^^^^^^^^^^^^^^^^^^

warning: function `extract_and_verify_token` is never used
   --> fechatter_server/src/middlewares/auth_core.rs:240:10
    |
240 | async fn extract_and_verify_token(
    |          ^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `update_hit_rate` is never used
   --> fechatter_server/src/middlewares/caching.rs:129:6
    |
121 | impl MemoryCacheStorage {
    | ----------------------- method in this implementation
...
129 |   fn update_hit_rate(&self) {
    |      ^^^^^^^^^^^^^^^

warning: function `generate_cache_key` is never used
   --> fechatter_server/src/middlewares/caching.rs:399:10
    |
399 | async fn generate_cache_key(req: &Request<Body>, config: &CacheConfig) -> Result<String, AppError> {
    |          ^^^^^^^^^^^^^^^^^^

warning: trait `OpenApiRouter` is never used
  --> fechatter_server/src/openapi.rs:21:18
   |
21 | pub(crate) trait OpenApiRouter {
   |                  ^^^^^^^^^^^^^

warning: struct `ApiDoc` is never constructed
  --> fechatter_server/src/openapi.rs:81:19
   |
81 | pub(crate) struct ApiDoc;
   |                   ^^^^^^

warning: function `openapi_json` is never used
   --> fechatter_server/src/openapi.rs:101:10
    |
101 | async fn openapi_json() -> Json<utoipa::openapi::OpenApi> {
    |          ^^^^^^^^^^^^

warning: function `swagger_redirect` is never used
   --> fechatter_server/src/openapi.rs:106:10
    |
106 | async fn swagger_redirect() -> axum::response::Redirect {
    |          ^^^^^^^^^^^^^^^^

warning: function `swagger_ui` is never used
   --> fechatter_server/src/openapi.rs:111:10
    |
111 | async fn swagger_ui() -> Html<&'static str> {
    |          ^^^^^^^^^^

warning: function `redoc_ui` is never used
   --> fechatter_server/src/openapi.rs:138:10
    |
138 | async fn redoc_ui() -> Html<&'static str> {
    |          ^^^^^^^^

warning: function `rapidoc_ui` is never used
   --> fechatter_server/src/openapi.rs:156:10
    |
156 | async fn rapidoc_ui() -> Html<String> {
    |          ^^^^^^^^^^

warning: field `failure_count` is never read
  --> fechatter_server/src/services/application/builders/provider.rs:33:3
   |
32 | struct CircuitBreaker {
   |        -------------- field in this struct
33 |   failure_count: u32,
   |   ^^^^^^^^^^^^^
   |
   = note: `CircuitBreaker` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Closed` and `Open` are never constructed
  --> fechatter_server/src/services/application/builders/provider.rs:40:3
   |
39 | enum CircuitBreakerState {
   |      ------------------- variants in this enum
40 |   Closed,   // Normal operation
   |   ^^^^^^
41 |   Open,     // Service unavailable
   |   ^^^^
   |
   = note: `CircuitBreakerState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `access_count` and `last_access` are never read
  --> fechatter_server/src/services/application/builders/provider.rs:58:3
   |
55 | struct CachedService<T> {
   |        ------------- fields in this struct
...
58 |   access_count: u64,
   |   ^^^^^^^^^^^^
59 |   last_access: Instant,
   |   ^^^^^^^^^^^

warning: field `circuit_breaker_threshold` is never read
  --> fechatter_server/src/services/application/builders/provider.rs:87:3
   |
64 | pub struct ServiceProvider {
   |            --------------- field in this struct
...
87 |   circuit_breaker_threshold: u32,
   |   ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `ServiceProvider` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: methods `create_optimized_realtime_stream` and `record_service_failure` are never used
   --> fechatter_server/src/services/application/builders/provider.rs:335:6
    |
94  | impl ServiceProvider {
    | -------------------- methods in this implementation
...
335 |   fn create_optimized_realtime_stream(
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
402 |   fn record_service_failure(&self, service_name: &str, error: &str) {
    |      ^^^^^^^^^^^^^^^^^^^^^^

warning: type alias `CompleteMessageService` is never used
    --> fechatter_server/src/services/application/workers/message/service.rs:1067:10
     |
1067 | pub type CompleteMessageService = DualStreamMessageService;
     |          ^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_complete_message_service` is never used
    --> fechatter_server/src/services/application/workers/message/service.rs:1071:8
     |
1071 | pub fn create_complete_message_service(state: &AppState) -> CompleteMessageService {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method `document_to_message` is never used
   --> fechatter_server/src/services/application/workers/search/service.rs:177:6
    |
141 | impl SearchApplicationService {
    | ----------------------------- method in this implementation
...
177 |   fn document_to_message(&self, doc: &Document) -> Result<SearchableMessage, AppError> {
    |      ^^^^^^^^^^^^^^^^^^^

warning: field `pool` is never read
  --> fechatter_server/src/services/application/workers/workspace/service.rs:77:3
   |
75 | pub struct WorkspaceApplicationService {
   |            --------------------------- field in this struct
76 |   workspace_domain_service: Arc<dyn WorkspaceDomainService>,
77 |   pool: Arc<sqlx::PgPool>, // Only for user list query (TODO: move to domain)
   |   ^^^^

warning: fields `cache` and `redis` are never read
   --> fechatter_server/src/services/infrastructure/cache/mod.rs:346:3
    |
345 | pub struct CacheWarmupStrategy {
    |            ------------------- fields in this struct
346 |   cache: Arc<UnifiedCacheService>,
    |   ^^^^^
347 |   redis: Arc<RedisCacheService>,
    |   ^^^^^

warning: field `client` is never read
  --> fechatter_server/src/services/infrastructure/cache/redis.rs:20:3
   |
19 | pub struct RedisCacheService {
   |            ----------------- field in this struct
20 |   client: Arc<Client>,
   |   ^^^^^^

warning: method `record_cache_metric` is never used
   --> fechatter_server/src/services/infrastructure/cache/redis.rs:551:12
    |
51  | impl RedisCacheService {
    | ---------------------- method in this implementation
...
551 |   async fn record_cache_metric(&self, operation: &str, hit: bool, duration_ms: u64) {
    |            ^^^^^^^^^^^^^^^^^^^

warning: field `transport` is never read
  --> fechatter_server/src/services/infrastructure/event/analytics_publisher.rs:40:5
   |
39 | pub struct AnalyticsEventPublisher<T: EventTransport + 'static> {
   |            ----------------------- field in this struct
40 |     transport: Arc<T>,
   |     ^^^^^^^^^

warning: enum `InvalidationType` is never used
  --> fechatter_server/src/services/infrastructure/event/event_subscriber.rs:83:6
   |
83 | enum InvalidationType {
   |      ^^^^^^^^^^^^^^^^

warning: methods `invalidate_with_strategy`, `add_to_batch`, and `execute_invalidation` are never used
   --> fechatter_server/src/services/infrastructure/event/event_subscriber.rs:224:12
    |
113 | impl CacheEventSubscriber {
    | ------------------------- methods in this implementation
...
224 |   async fn invalidate_with_strategy(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
236 |   async fn add_to_batch(&self, invalidation_type: InvalidationType) -> Result<(), AppError> {
    |            ^^^^^^^^^^^^
...
271 |   async fn execute_invalidation(
    |            ^^^^^^^^^^^^^^^^^^^^

warning: field `config` is never read
   --> fechatter_server/src/services/infrastructure/event/transport.rs:355:3
    |
353 | pub struct InMemoryTransport {
    |            ----------------- field in this struct
354 |   messages: Arc<RwLock<Vec<(String, Bytes, Option<HashMap<String, String>>)>>>,
355 |   config: TransportConfig,
    |   ^^^^^^
    |
    = note: `InMemoryTransport` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: field `error_type` is never read
  --> fechatter_server/src/services/infrastructure/search/meilisearch.rs:57:3
   |
53 | struct MeilisearchErrorResponse {
   |        ------------------------ field in this struct
...
57 |   error_type: String,
   |   ^^^^^^^^^^
   |
   = note: `MeilisearchErrorResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `config` is never read
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:416:3
    |
414 | pub struct MeilisearchBackend {
    |            ------------------ field in this struct
415 |   client: Arc<MeilisearchClient>,
416 |   config: SearchConfig,
    |   ^^^^^^

warning: method `setup_index` is never used
   --> fechatter_server/src/services/infrastructure/search/search_service.rs:492:12
    |
420 | impl MeilisearchBackend {
    | ----------------------- method in this implementation
...
492 |   async fn setup_index(&self) -> SearchServiceResult<()> {
    |            ^^^^^^^^^^^

warning: constant `MESSAGE_EMBEDDINGS_TABLE` is never used
  --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:17:7
   |
17 | const MESSAGE_EMBEDDINGS_TABLE: &str = "message_embeddings";
   |       ^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `VECTOR_EMBEDDINGS_TABLE` is never used
  --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:18:7
   |
18 | const VECTOR_EMBEDDINGS_TABLE: &str = "vector_embeddings";
   |       ^^^^^^^^^^^^^^^^^^^^^^^

warning: method `as_slice` is never used
  --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:54:6
   |
25 | impl EmbeddingVector {
   | -------------------- method in this implementation
...
54 |   fn as_slice(&self) -> &[f32] {
   |      ^^^^^^^^

warning: associated function `convert_error` is never used
   --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:125:6
    |
94  | impl PgVectorDatabase {
    | --------------------- associated function in this implementation
...
125 |   fn convert_error(error: sqlx::Error) -> VectorDbError {
    |      ^^^^^^^^^^^^^

warning: enum `SearchParams` is never used
   --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:131:6
    |
131 | enum SearchParams<'a> {
    |      ^^^^^^^^^^^^

warning: enum `MessageSearchParams` is never used
   --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:597:6
    |
597 | enum MessageSearchParams {
    |      ^^^^^^^^^^^^^^^^^^^

warning: methods `build_message_search_params` and `row_to_message_embedding` are never used
   --> fechatter_server/src/services/infrastructure/vector_db/pgvector.rs:604:6
    |
602 | impl PgVectorDatabase {
    | --------------------- methods in this implementation
603 |   /// Builds message search parameters in a type-safe manner
604 |   fn build_message_search_params(
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
650 |   fn row_to_message_embedding(&self, row: sqlx::postgres::PgRow) -> MessageEmbedding {
    |      ^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `detect_high_activity_periods` and `create_high_activity_entry` are never used
   --> fechatter_server/src/services/ai/agents/timeline_agent.rs:137:6
    |
47  | impl TimelineIndexAgent {
    | ----------------------- methods in this implementation
...
137 |   fn detect_high_activity_periods(
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
215 |   fn create_high_activity_entry(
    |      ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `BatchInferenceRequest` is never constructed
  --> fechatter_server/src/services/ai/huggingface.rs:29:8
   |
29 | struct BatchInferenceRequest {
   |        ^^^^^^^^^^^^^^^^^^^^^

warning: fields `start` and `end` are never read
  --> fechatter_server/src/services/ai/huggingface.rs:50:3
   |
46 | struct NERResponse {
   |        ----------- fields in this struct
...
50 |   start: usize,
   |   ^^^^^
51 |   end: usize,
   |   ^^^
   |
   = note: `NERResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: method `moderate_content` is never used
   --> fechatter_server/src/services/ai/openai.rs:247:12
    |
56  | impl OpenAIClient {
    | ----------------- method in this implementation
...
247 |   async fn moderate_content(&self, content: &str) -> Result<bool, AppError> {
    |            ^^^^^^^^^^^^^^^^

warning: field `results` is never read
   --> fechatter_server/src/services/ai/openai.rs:255:7
    |
254 |     struct ModerationResponse {
    |            ------------------ field in this struct
255 |       results: Vec<ModerationResult>,
    |       ^^^^^^^
    |
    = note: `ModerationResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `flagged` is never read
   --> fechatter_server/src/services/ai/openai.rs:260:7
    |
259 |     struct ModerationResult {
    |            ---------------- field in this struct
260 |       flagged: bool,
    |       ^^^^^^^
    |
    = note: `ModerationResult` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `summary_agent` and `timeline_agent` are never read
  --> fechatter_server/src/services/ai/rag_indexer.rs:24:3
   |
21 | pub struct RAGMessageIndexer {
   |            ----------------- fields in this struct
...
24 |   summary_agent: Arc<ChatSummaryAgent>,
   |   ^^^^^^^^^^^^^
25 |   timeline_agent: Arc<TimelineIndexAgent>,
   |   ^^^^^^^^^^^^^^

warning: methods `index_summaries` and `index_timeline` are never used
   --> fechatter_server/src/services/ai/rag_indexer.rs:219:12
    |
77  | impl RAGMessageIndexer {
    | ---------------------- methods in this implementation
...
219 |   async fn index_summaries(
    |            ^^^^^^^^^^^^^^^
...
258 |   async fn index_timeline(&self, timeline: &TimelineIndex) -> Result<(), AppError> {
    |            ^^^^^^^^^^^^^^

warning: method `create_auth_service` is never used
   --> fechatter_server/src/state.rs:119:6
    |
118 | impl AppStateInner {
    | ------------------ method in this implementation
119 |   fn create_auth_service(&self, app_state: &AppState) -> ProductionAuthServiceWrapper {
    |      ^^^^^^^^^^^^^^^^^^^

warning: trait `WithCache` is never used
   --> fechatter_server/src/state.rs:140:7
    |
140 | trait WithCache<K, V> {
    |       ^^^^^^^^^

warning: call to `.clone()` on a reference in this situation does nothing
   --> fechatter_server/src/services/infrastructure/event_publisher.rs:335:23
    |
335 |       .publish(subject.clone(), payload.into())
    |                       ^^^^^^^^ help: remove this redundant call
    |
    = note: the type `str` does not implement `Clone`, so calling `clone` on `&str` copies the reference, which does not do anything and can be removed
    = note: `#[warn(noop_method_call)]` on by default

warning: call to `.clone()` on a reference in this situation does nothing
   --> fechatter_server/src/services/infrastructure/event_publisher.rs:397:23
    |
397 |       .publish(subject.clone(), payload.into())
    |                       ^^^^^^^^ help: remove this redundant call
    |
    = note: the type `str` does not implement `Clone`, so calling `clone` on `&str` copies the reference, which does not do anything and can be removed

warning: `fechatter_server` (lib) generated 125 warnings (run `cargo fix --lib -p fechatter_server` to apply 5 suggestions)
   Compiling fechatter_server v0.1.0 (/Users/zhangkaiqi/Rust/Fechatter/fechatter_server)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 44.41s
     Running `target/main/debug/fechatter_server`
📁 Found config: /Users/zhangkaiqi/Rust/Fechatter/fechatter_server/chat.yml (Project structure (fechatter_server))
✅ Configuration loaded successfully!
🎯 Configuration Summary:
   Server: Port 6688, DB: postgres://postgres:***@localhost:5432/fechatter
   Cache: ✅ Enabled
   Search: ✅ Enabled
   Messaging: ✅ Enabled
🔧 Development telemetry mode
✅ Basic telemetry initialized: service=fechatter-server, version=0.1.0, environment=development
📊 Metrics endpoint configured: 0.0.0.0:9090
✅ Prometheus metrics exporter initialized
