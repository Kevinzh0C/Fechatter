# Fly.io 配置 - 生产就绪版本
app = "fechatter-demo"
primary_region = "nrt"  # 东京，低延迟
kill_signal = "SIGTERM"
kill_timeout = 30

[build]
dockerfile = "Dockerfile.fly"

[env]
# 基础配置
ENVIRONMENT = "production"
RUST_LOG = "info"

# 数据库配置（选择一种）
# 选项1: 内嵌 SQLite（演示用）
DATABASE_URL = "sqlite:///data/fechatter.db"

# 选项2: Fly Postgres（生产用）
# DATABASE_URL 通过 fly postgres attach 自动设置

# Redis 配置
REDIS_URL = "redis://:fechatter_redis_pass@localhost:6379" # 使用内嵌 Redis

# 服务端口配置
GATEWAY_PORT = "8080"
FECHATTER_PORT = "6688"
NOTIFY_PORT = "6687"
BOT_PORT = "6686"
ANALYTICS_PORT = "6690"

# HTTP 服务配置
[http_service]
internal_port = 8080
force_https = true
auto_stop_machines = true  # 自动休眠节省费用
auto_start_machines = true # 请求时自动唤醒
min_machines_running = 0   # 允许完全休眠

[http_service.concurrency]
type = "connections"
hard_limit = 1000
soft_limit = 800

# 健康检查
[[http_service.checks]]
grace_period = "30s"
interval = "60s"
method = "GET"
path = "/health"
protocol = "http"
timeout = "10s"
headers = {}

# WebSocket 保持连接检查
[[http_service.checks]]
grace_period = "30s"
interval = "120s"
method = "GET"
path = "/sse/health"
protocol = "http"
timeout = "5s"

[[services]]
protocol = "tcp"
internal_port = 6688
processes = ["app"]

[[services.ports]]
port = 6688
handlers = ["tls"]

[[services]]
protocol = "tcp"
internal_port = 6687
processes = ["app"]

[[services.ports]]
port = 6687
handlers = ["tls"]

[[services]]
protocol = "tcp"
internal_port = 6686
processes = ["app"]

[[services.ports]]
port = 6686
handlers = ["tls"]

[[services]]
protocol = "tcp"
internal_port = 6690
processes = ["app"]

[[services.ports]]
port = 6690
handlers = ["tls"]

# 进程配置
[processes]
app = "/app/fly-start.sh"

# 持久存储
[[mounts]]
source = "fechatter_data"
destination = "/data"

# 虚拟机配置
[[vm]]
cpu_kind = "shared"
cpus = 1
memory_mb = 1024

# 指标收集
[metrics]
port = 9091
path = "/metrics"

[checks]
[checks.health]
grace_period = "10s"
interval = "30s"
method = "GET"
timeout = "5s"
path = "/health"
protocol = "http"
port = 8080

[deploy]
release_command = "echo 'Deployment complete'"
