# 本地开发用 Dockerfile - 使用预编译x86_64二进制文件
# 大大提升构建速度，直接使用交叉编译的二进制文件

# 不再需要构建阶段，直接使用运行时镜像
FROM alpine:3.19

WORKDIR /app

# 安装运行时依赖
RUN apk add --no-cache ca-certificates postgresql-client sqlite curl

# 创建应用用户以提高安全性
RUN addgroup -g 1001 -S fechatter && \
    adduser -u 1001 -S fechatter -G fechatter

# 复制预编译的x86_64二进制文件
# 使用SERVICE_NAME参数来选择具体的服务
ARG SERVICE_NAME=fechatter_server
COPY binaries/x86_64/${SERVICE_NAME}/${SERVICE_NAME} /app/service

# 复制配置文件
COPY config/ ./config/
COPY migrations/ ./migrations/

# 设置权限
RUN chmod +x /app/service && \
    chown -R fechatter:fechatter /app

# 切换到非root用户
USER fechatter

# 设置本地开发环境变量
ENV RUST_LOG=debug
ENV ENVIRONMENT=development

# 暴露端口（根据服务动态设置）
ARG SERVICE_PORT=8080
EXPOSE $SERVICE_PORT

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:$SERVICE_PORT/health || exit 1

# 启动命令
CMD ["/app/service"]