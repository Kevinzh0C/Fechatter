name: build

on:
  push:
    branches:
    - master
    tags:
    - v*
  pull_request:
    branches:
    - master

permissions:
  contents: write

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
        ports:
        - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
    - name: Install Protoc
      uses: arduino/setup-protoc@v3
    - name: Install Rust
      run: rustup toolchain install stable --component llvm-tools-preview
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
    - name: install nextest
      uses: taiki-e/install-action@nextest
    - name: Install sqlx-cli
      uses: taiki-e/install-action@v2
      with:
        tool: sqlx-cli@0.8.0
    - uses: Swatinem/rust-cache@v2
    - name: Create database
      run: sqlx database create
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/fechatter
    - name: Run database migrations
      run: sqlx migrate run --source ./migrations
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/fechatter
    - name: Check code format
      run: cargo fmt --all -- --check
    - name: Check the package for errors
      run: cargo check --all
    - name: Lint rust sources
      run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
    - name: Execute rust tests
      run: cargo nextest run --all-features
      env:
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/fechatter
    - name: Generate a changelog
      uses: orhun/git-cliff-action@v2
      id: git-cliff
      if: startsWith(github.ref, 'refs/tags/')
      with:
        config: cliff.toml
        args: -vv --latest --strip header
      env:
        OUTPUT: CHANGES.md
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body: ${{ steps.git-cliff.outputs.content }}
