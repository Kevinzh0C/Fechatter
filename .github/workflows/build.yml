on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  
permissions:
  contents: write

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
          override: true
      
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      
      - name: Install sqlx-cli
        uses: taiki-e/install-action@v2
        with:
          tool: sqlx-cli@0.7.3
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Set up database schema
        run: |
          sleep 5
          export DATABASE_URL="postgres://postgres:postgres@localhost:5432/postgres"
          sqlx database create
          sqlx migrate run --source migrations
        
      - name: Generate SQLx prepare data
        run: |
          export DATABASE_URL="postgres://postgres:postgres@localhost:5432/postgres"
          cargo sqlx prepare --workspace
        env:
          SQLX_OFFLINE: false
      
      - name: Check code format
        run: cargo fmt -- --check
        timeout-minutes: 5
      
      - name: Check the package for errors
        run: cargo check --all
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
        timeout-minutes: 10
      
      - name: Lint rust source
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
        timeout-minutes: 10
      
      - name: Execute rust tests
        run: cargo nextest run --all-features
        env:
          DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"
        timeout-minutes: 15
      
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header 
        env:
          OUTPUT: CHANGES.md
      
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with: 
          body: ${{ steps.git-cliff.outputs.content }}
   
